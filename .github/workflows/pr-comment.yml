name: PR Comment

on:
    pull_request:
        types: [opened, reopened, synchronize]
        paths:
            - 'blog/**'

jobs:
    pr-comment:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Get changed files
              id: changed-files
              uses: tj-actions/changed-files@v40
              with:
                  files: "blog/**/*.md"

            - name: Create comment file
              if: steps.changed-files.outputs.any_changed == 'true'
              run: |
                  # Écrire le commentaire dans un fichier
                  echo "## Fichiers modifiés:" > comment.md
                  echo "" >> comment.md
                  
                  for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                    echo "- ✏️ \`$file\`" >> comment.md
                  done
                  
                  echo "" >> comment.md
                  echo "### ✅ Vérifications à effectuer:" >> comment.md
                  echo "" >> comment.md
                  echo "- [ ] Le contenu est techniquement correct" >> comment.md
                  echo "- [ ] Le style d'écriture est cohérent avec la ligne éditoriale" >> comment.md
                  echo "- [ ] Les liens et références sont valides" >> comment.md
                  echo "- [ ] Le formatage Markdown est correct" >> comment.md
                  echo "- [ ] Les tags sont pertinents" >> comment.md
                  echo "" >> comment.md
                  echo "Une fois ces vérifications effectuées, vous pouvez fusionner cette PR." >> comment.md

            - name: Add comment to PR
              if: steps.changed-files.outputs.any_changed == 'true'
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const fs = require('fs');
                      const commentBody = fs.readFileSync('comment.md', 'utf8');
                      
                      await github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: commentBody
                      });