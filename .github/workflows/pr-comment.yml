name: PR Comment

on:
    pull_request:
        types: [opened, reopened, synchronize]
        paths:
            - 'blog/**'

jobs:
    pr-comment:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Get changed files
              id: changed-files
              uses: tj-actions/changed-files@v40
              with:
                  files: "blog/**/*.md"  # Assurez-vous que c'est entre guillemets

            - name: Create comment body
              if: steps.changed-files.outputs.any_changed == 'true'
              id: create-comment
              run: |
                  echo 'COMMENT<<EOF' >> $GITHUB_ENV
                  echo '## Fichiers modifiés:' >> $GITHUB_ENV
                  echo '' >> $GITHUB_ENV
                  
                  for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                    echo "- ✏️ \`$file\`" >> $GITHUB_ENV
                  done
                  
                  echo '' >> $GITHUB_ENV
                  echo '### ✅ Vérifications à effectuer:' >> $GITHUB_ENV
                  echo '' >> $GITHUB_ENV
                  echo '- [ ] Le contenu est techniquement correct' >> $GITHUB_ENV
                  echo '- [ ] Le style d\'écriture est cohérent avec la ligne éditoriale' >> $GITHUB_ENV
                  echo '- [ ] Les liens et références sont valides' >> $GITHUB_ENV
                  echo '- [ ] Le formatage Markdown est correct' >> $GITHUB_ENV
                  echo '- [ ] Les tags sont pertinents' >> $GITHUB_ENV
                  echo '' >> $GITHUB_ENV
                  echo 'Une fois ces vérifications effectuées, vous pouvez fusionner cette PR.' >> $GITHUB_ENV
                  echo 'EOF' >> $GITHUB_ENV

            - name: Add comment to PR
              if: steps.changed-files.outputs.any_changed == 'true'
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const commentBody = process.env.COMMENT;
                      
                      await github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: commentBody
                      });